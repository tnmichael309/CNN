name: "Go_Learning"
layers {
  name: "channel_1"
  type: DATA
  top: "channel_1"
  top: "label_1"
  image_data_param {
 	source: "/home/j31icw00/workdir/leooo/caffe/Go_New_DB/Go_data_base_1"
    batch_size: 64
    new_height: 19
    new_width: 19
  }
}

layers {
  name: "channel_2"
  type: IMAGE_DATA
  top: "channel_2"
  top: "label_2"
  image_data_param {
 	source: "/home/j31icw00/workdir/leooo/caffe/Go_New_DB/Go_data_base_2"
    batch_size: 64
    new_height: 19
    new_width: 19
  }
}

layers {
  name: "channel_3"
  type: IMAGE_DATA
  top: "channel_3"
  top: "label_3"
  image_data_param {
 	source: "/home/j31icw00/workdir/leooo/caffe/Go_New_DB/Go_data_base_3"
    batch_size: 64
    new_height: 19
    new_width: 19
  }
}

layers {
  name: "channel_4"
  type: IMAGE_DATA
  top: "channel_4"
  top: "label_4"
  image_data_param {
 	source: "/home/j31icw00/workdir/leooo/caffe/Go_New_DB/Go_data_base_4"
    batch_size: 64
    new_height: 19
    new_width: 19
  }
}

layers {
  name: "channel_5"
  type: IMAGE_DATA
  top: "channel_5"
  top: "label_5"
  image_data_param {
 	source: "/home/j31icw00/workdir/leooo/caffe/Go_New_DB/Go_data_base_5"
    batch_size: 64
    new_height: 19
    new_width: 19
  }
}

layers {
  name: "channel_6"
  type: IMAGE_DATA
  top: "channel_6"
  top: "label_6"
  image_data_param {
 	source: "/home/j31icw00/workdir/leooo/caffe/Go_New_DB/Go_data_base_6"
    batch_size: 64
    new_height: 19
    new_width: 19
  }
}

layers {
  name: "channel_7"
  type: IMAGE_DATA
  top: "channel_7"
  top: "label_7"
  image_data_param {
 	source: "/home/j31icw00/workdir/leooo/caffe/Go_New_DB/Go_data_base_7"
    batch_size: 64
    new_height: 19
    new_width: 19
  }
}

layers {
  name: "concat_all_channels"
  bottom: "channel_1"
  bottom: "channel_2"
  bottom: "channel_3"
  bottom: "channel_4"
  bottom: "channel_5"
  bottom: "channel_6"
  bottom: "channel_7"
  top: "concat_all_channels"
  type: CONCAT
  concat_param {
    concat_dim: 1
  }
}

layers {
  name: "conv1"
  type: CONVOLUTION
  bottom: "concat_all_channels"
  top: "conv1"
  blobs_lr: 1
  blobs_lr: 2
  convolution_param {
    num_output: 128
    kernel_size: 5
    stride: 1
	pad: 4
    weight_filler {
      type: "gaussian"
      std: 0.0001
    }
    bias_filler {
      type: "constant"
	  value: 0
    }
  }
}

layers {
  name: "conv2"
  type: CONVOLUTION
  bottom: "conv1"
  top: "conv2"
  blobs_lr: 1
  blobs_lr: 2
  convolution_param {
    num_output: 128
    kernel_size: 3
    stride: 1
	pad: 2
    weight_filler {
      type: "gaussian"
      std: 0.0001
    }
    bias_filler {
      type: "constant"
	  value: 0
    }
  }
}

layers {
  name: "conv3"
  type: CONVOLUTION
  bottom: "conv2"
  top: "conv3"
  blobs_lr: 1
  blobs_lr: 2
  convolution_param {
    num_output: 128
    kernel_size: 3
    stride: 1
	pad: 2
    weight_filler {
      type: "gaussian"
      std: 0.0001
    }
    bias_filler {
      type: "constant"
	  value: 0
    }
  }
}

layers {
  name: "conv4"
  type: CONVOLUTION
  bottom: "conv3"
  top: "conv4"
  blobs_lr: 1
  blobs_lr: 2
  convolution_param {
    num_output: 128
    kernel_size: 3
    stride: 1
	pad: 2
    weight_filler {
      type: "gaussian"
      std: 0.0001
    }
    bias_filler {
      type: "constant"
	  value: 0
    }
  }
}

layers {
  name: "conv5"
  type: CONVOLUTION
  bottom: "conv4"
  top: "conv5"
  blobs_lr: 1
  blobs_lr: 2
  convolution_param {
    num_output: 128
    kernel_size: 3
    stride: 1
	pad: 2
    weight_filler {
      type: "gaussian"
      std: 0.0001
    }
    bias_filler {
      type: "constant"
	  value: 0
    }
  }
}

layers {
  name: "conv6"
  type: CONVOLUTION
  bottom: "conv5"
  top: "conv6"
  blobs_lr: 1
  blobs_lr: 2
  convolution_param {
    num_output: 128
    kernel_size: 3
    stride: 1
	pad: 2
    weight_filler {
      type: "gaussian"
      std: 0.0001
    }
    bias_filler {
      type: "constant"
	  value: 0
    }
  }
}

layers {
  name: "conv7"
  type: CONVOLUTION
  bottom: "conv6"
  top: "conv7"
  blobs_lr: 1
  blobs_lr: 2
  convolution_param {
    num_output: 128
    kernel_size: 3
    stride: 1
	pad: 2
    weight_filler {
      type: "gaussian"
      std: 0.0001
    }
    bias_filler {
      type: "constant"
	  value: 0
    }
  }
}

layers {
  name: "conv8"
  type: CONVOLUTION
  bottom: "conv7"
  top: "conv8"
  blobs_lr: 1
  blobs_lr: 2
  convolution_param {
    num_output: 128
    kernel_size: 3
    stride: 1
	pad: 2
    weight_filler {
      type: "gaussian"
      std: 0.0001
    }
    bias_filler {
      type: "constant"
	  value: 0
    }
  }
}

layers {
  name: "conv9"
  type: CONVOLUTION
  bottom: "conv8"
  top: "conv9"
  blobs_lr: 1
  blobs_lr: 2
  convolution_param {
    num_output: 128
    kernel_size: 3
    stride: 1
	pad: 2
    weight_filler {
      type: "gaussian"
      std: 0.0001
    }
    bias_filler {
      type: "constant"
	  value: 0
    }
  }
}

layers {
  name: "conv10"
  type: CONVOLUTION
  bottom: "conv9"
  top: "conv10"
  blobs_lr: 1
  blobs_lr: 2
  convolution_param {
    num_output: 128
    kernel_size: 3
    stride: 1
	pad: 2
    weight_filler {
      type: "gaussian"
      std: 0.0001
    }
    bias_filler {
      type: "constant"
	  value: 0
    }
  }
}

layers {
  name: "conv11"
  type: CONVOLUTION
  bottom: "conv10"
  top: "conv11"
  blobs_lr: 1
  blobs_lr: 2
  convolution_param {
    num_output: 128
    kernel_size: 3
    stride: 1
	pad: 2
    weight_filler {
      type: "gaussian"
      std: 0.0001
    }
    bias_filler {
      type: "constant"
	  value: 0
    }
  }
}

layers {
  name: "ip1"
  type: INNER_PRODUCT
  bottom: "conv11"
  top: "ip1"
  blobs_lr: 1
  blobs_lr: 2
  inner_product_param {
    num_output: 381
    weight_filler {
      type: "gaussian"
      std: 0.1
    }
    bias_filler {
      type: "constant"
    }
  }
}

layers {
  name: "accuracy"
  type: ACCURACY
  bottom: "ip1"
  bottom: "label_1"
  top: "accuracy"
}

layers {
  name: "loss"
  type: SOFTMAX_LOSS
  bottom: "ip1"
  bottom: "label_1"
  top: "loss"
}

layers {
  name: "prob"
  type: SOFTMAX
  bottom: "ip1"
  top: "prob"
}

layers
{
  name: "argmax"
  type: ARGMAX
  bottom: "prob"
  top: "argmax"
  argmax_param {
    top_k: 5
  }
}
